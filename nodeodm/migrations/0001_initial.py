# Generated by Django 4.2.14 on 2024-08-17 07:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProcessingNode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(help_text='Hostname or IP address where the node is located (can be an internal hostname as well). If you are using Docker, this is never 127.0.0.1 or localhost. Find the IP address of your host machine by running ifconfig on Linux or by checking your network settings.', max_length=255, verbose_name='Hostname')),
                ('port', models.PositiveIntegerField(help_text="Port that connects to the node's API", verbose_name='Port')),
                ('api_version', models.CharField(help_text='API version used by the node', max_length=32, null=True, verbose_name='API Version')),
                ('last_refreshed', models.DateTimeField(help_text='When was the information about this node last retrieved?', null=True, verbose_name='Last Refreshed')),
                ('queue_count', models.PositiveIntegerField(default=0, help_text='Number of tasks currently being processed by this node (as reported by the node itself)', verbose_name='Queue Count')),
                ('available_options', models.JSONField(default=dict, help_text='Description of the options that can be used for processing', verbose_name='Available Options')),
                ('token', models.CharField(blank=True, default='', help_text="Token to use for authentication. If the node doesn't have authentication, you can leave this field blank.", max_length=1024, verbose_name='Token')),
                ('max_images', models.PositiveIntegerField(blank=True, help_text='Maximum number of images accepted by this node.', null=True, verbose_name='Max Images')),
                ('engine_version', models.CharField(help_text='Engine version used by the node.', max_length=32, null=True, verbose_name='Engine Version')),
                ('label', models.CharField(blank=True, default='', help_text='Optional label for this node. When set, this label will be shown instead of the hostname:port name.', max_length=255, verbose_name='Label')),
                ('engine', models.CharField(help_text='Engine used by the node.', max_length=255, null=True, verbose_name='Engine')),
            ],
            options={
                'verbose_name': 'Processing Node',
                'verbose_name_plural': 'Processing Nodes',
            },
        ),
        migrations.CreateModel(
            name='ProcessingNodeUserObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodeodm.processingnode')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.permission')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('user', 'permission', 'content_object')},
            },
        ),
        migrations.CreateModel(
            name='ProcessingNodeGroupObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodeodm.processingnode')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.group')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.permission')),
            ],
            options={
                'abstract': False,
                'unique_together': {('group', 'permission', 'content_object')},
            },
        ),
    ]
